// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders chip with icon 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "borderRadius": 16,
    }
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 16,
          "borderWidth": 0.5,
          "flexDirection": "row",
          "justifyContent": "space-around",
          "paddingHorizontal": 4,
        },
        Object {
          "backgroundColor": "rgba(0, 0, 0, 0.12)",
          "borderColor": "transparent",
        },
        Object {},
        null,
      ]
    }
  >
    <Text
      accessible={true}
      allowFontScaling={false}
      ellipsizeMode="tail"
      pointerEvents="none"
      style={
        Array [
          Object {
            "color": "rgba(0, 0, 0, 0.54)",
            "fontSize": 20,
          },
          Object {
            "backgroundColor": "transparent",
          },
          Object {
            "fontFamily": "Material Icons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
        ]
      }
    >
      
    </Text>
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      numberOfLines={1}
      style={
        Array [
          Object {
            "color": "#000000",
            "fontFamily": "Helvetica Neue",
          },
          Array [
            Object {
              "margin": 8,
            },
            Object {
              "color": "rgba(0, 0, 0, 0.87)",
              "marginRight": 8,
            },
          ],
        ]
      }
      theme={
        Object {
          "colors": Object {
            "accent": "#03dac4",
            "background": "#f6f6f6",
            "disabled": "rgba(0, 0, 0, 0.26)",
            "error": "#B00020",
            "placeholder": "rgba(0, 0, 0, 0.38)",
            "primary": "#6200ee",
            "surface": "#ffffff",
            "text": "#000000",
          },
          "dark": false,
          "fonts": Object {
            "light": "HelveticaNeue-Light",
            "medium": "HelveticaNeue-Medium",
            "regular": "Helvetica Neue",
            "thin": "HelveticaNeue-Thin",
          },
          "roundness": 4,
        }
      }
    >
      Example Chip
    </Text>
  </View>
</View>
`;

exports[`renders chip with onPress 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "borderRadius": 16,
    }
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 16,
          "borderWidth": 0.5,
          "flexDirection": "row",
          "justifyContent": "space-around",
          "paddingHorizontal": 4,
        },
        Object {
          "backgroundColor": "rgba(0, 0, 0, 0.12)",
          "borderColor": "transparent",
        },
        Object {},
        null,
      ]
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      numberOfLines={1}
      style={
        Array [
          Object {
            "color": "#000000",
            "fontFamily": "Helvetica Neue",
          },
          Array [
            Object {
              "margin": 8,
            },
            Object {
              "color": "rgba(0, 0, 0, 0.87)",
              "marginRight": 8,
            },
          ],
        ]
      }
      theme={
        Object {
          "colors": Object {
            "accent": "#03dac4",
            "background": "#f6f6f6",
            "disabled": "rgba(0, 0, 0, 0.26)",
            "error": "#B00020",
            "placeholder": "rgba(0, 0, 0, 0.38)",
            "primary": "#6200ee",
            "surface": "#ffffff",
            "text": "#000000",
          },
          "dark": false,
          "fonts": Object {
            "light": "HelveticaNeue-Light",
            "medium": "HelveticaNeue-Medium",
            "regular": "Helvetica Neue",
            "thin": "HelveticaNeue-Thin",
          },
          "roundness": 4,
        }
      }
    >
      Example Chip
    </Text>
  </View>
</View>
`;

exports[`renders deletable chip 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "borderRadius": 16,
    }
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 16,
          "borderWidth": 0.5,
          "flexDirection": "row",
          "justifyContent": "space-around",
          "paddingHorizontal": 4,
        },
        Object {
          "backgroundColor": "rgba(0, 0, 0, 0.12)",
          "borderColor": "transparent",
        },
        Object {},
        null,
      ]
    }
  >
    <Text
      accessible={true}
      allowFontScaling={false}
      ellipsizeMode="tail"
      pointerEvents="none"
      style={
        Array [
          Object {
            "color": "rgba(0, 0, 0, 0.54)",
            "fontSize": 20,
          },
          Object {
            "backgroundColor": "transparent",
          },
          Object {
            "fontFamily": "Material Icons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
        ]
      }
    >
      
    </Text>
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      numberOfLines={1}
      style={
        Array [
          Object {
            "color": "#000000",
            "fontFamily": "Helvetica Neue",
          },
          Array [
            Object {
              "margin": 8,
            },
            Object {
              "color": "rgba(0, 0, 0, 0.87)",
              "marginRight": 0,
            },
          ],
        ]
      }
      theme={
        Object {
          "colors": Object {
            "accent": "#03dac4",
            "background": "#f6f6f6",
            "disabled": "rgba(0, 0, 0, 0.26)",
            "error": "#B00020",
            "placeholder": "rgba(0, 0, 0, 0.38)",
            "primary": "#6200ee",
            "surface": "#ffffff",
            "text": "#000000",
          },
          "dark": false,
          "fonts": Object {
            "light": "HelveticaNeue-Light",
            "medium": "HelveticaNeue-Medium",
            "regular": "Helvetica Neue",
            "thin": "HelveticaNeue-Thin",
          },
          "roundness": 4,
        }
      }
    >
      Example Chip
    </Text>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "padding": 6,
        }
      }
      testID={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={false}
        ellipsizeMode="tail"
        pointerEvents="none"
        style={
          Array [
            Object {
              "color": "rgba(0, 0, 0, 0.54)",
              "fontSize": 20,
            },
            Object {
              "backgroundColor": "transparent",
            },
            Object {
              "fontFamily": "Material Icons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
          ]
        }
      >
        
      </Text>
    </View>
  </View>
</View>
`;

exports[`renders outlined disabled chip 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "borderRadius": 16,
    }
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 16,
          "borderWidth": 0.5,
          "flexDirection": "row",
          "justifyContent": "space-around",
          "paddingHorizontal": 4,
        },
        Object {
          "backgroundColor": "#f6f6f6",
          "borderColor": "#000000",
        },
        Object {},
        null,
      ]
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      numberOfLines={1}
      style={
        Array [
          Object {
            "color": "#000000",
            "fontFamily": "Helvetica Neue",
          },
          Array [
            Object {
              "margin": 8,
            },
            Object {
              "color": "rgba(0, 0, 0, 0.26)",
              "marginRight": 8,
            },
          ],
        ]
      }
      theme={
        Object {
          "colors": Object {
            "accent": "#03dac4",
            "background": "#f6f6f6",
            "disabled": "rgba(0, 0, 0, 0.26)",
            "error": "#B00020",
            "placeholder": "rgba(0, 0, 0, 0.38)",
            "primary": "#6200ee",
            "surface": "#ffffff",
            "text": "#000000",
          },
          "dark": false,
          "fonts": Object {
            "light": "HelveticaNeue-Light",
            "medium": "HelveticaNeue-Medium",
            "regular": "Helvetica Neue",
            "thin": "HelveticaNeue-Thin",
          },
          "roundness": 4,
        }
      }
    >
      Example Chip
    </Text>
  </View>
</View>
`;

exports[`renders pressed chip 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "borderRadius": 16,
    }
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 16,
          "borderWidth": 0.5,
          "flexDirection": "row",
          "justifyContent": "space-around",
          "paddingHorizontal": 4,
        },
        Object {
          "backgroundColor": "rgba(0, 0, 0, 0.12)",
          "borderColor": "transparent",
        },
        Object {},
        Object {
          "backgroundColor": "rgba(0, 0, 0, 0.3)",
        },
      ]
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      numberOfLines={1}
      style={
        Array [
          Object {
            "color": "#000000",
            "fontFamily": "Helvetica Neue",
          },
          Array [
            Object {
              "margin": 8,
            },
            Object {
              "color": "rgba(0, 0, 0, 0.87)",
              "marginRight": 8,
            },
          ],
        ]
      }
      theme={
        Object {
          "colors": Object {
            "accent": "#03dac4",
            "background": "#f6f6f6",
            "disabled": "rgba(0, 0, 0, 0.26)",
            "error": "#B00020",
            "placeholder": "rgba(0, 0, 0, 0.38)",
            "primary": "#6200ee",
            "surface": "#ffffff",
            "text": "#000000",
          },
          "dark": false,
          "fonts": Object {
            "light": "HelveticaNeue-Light",
            "medium": "HelveticaNeue-Medium",
            "regular": "Helvetica Neue",
            "thin": "HelveticaNeue-Thin",
          },
          "roundness": 4,
        }
      }
    >
      Example Chip
    </Text>
  </View>
</View>
`;

exports[`renders selected chip 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "borderRadius": 16,
    }
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderRadius": 16,
          "borderWidth": 0.5,
          "flexDirection": "row",
          "justifyContent": "space-around",
          "paddingHorizontal": 4,
        },
        Object {
          "backgroundColor": "rgba(0, 0, 0, 0.12)",
          "borderColor": "transparent",
        },
        Object {},
        Object {
          "backgroundColor": "rgba(0, 0, 0, 0.3)",
        },
      ]
    }
  >
    <Text
      accessible={true}
      allowFontScaling={false}
      ellipsizeMode="tail"
      pointerEvents="none"
      style={
        Array [
          Object {
            "color": "rgba(0, 0, 0, 0.54)",
            "fontSize": 20,
          },
          Object {
            "backgroundColor": "transparent",
          },
          Object {
            "fontFamily": "Material Icons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
        ]
      }
    >
      
    </Text>
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      numberOfLines={1}
      style={
        Array [
          Object {
            "color": "#000000",
            "fontFamily": "Helvetica Neue",
          },
          Array [
            Object {
              "margin": 8,
            },
            Object {
              "color": "rgba(0, 0, 0, 0.87)",
              "marginRight": 8,
            },
          ],
        ]
      }
      theme={
        Object {
          "colors": Object {
            "accent": "#03dac4",
            "background": "#f6f6f6",
            "disabled": "rgba(0, 0, 0, 0.26)",
            "error": "#B00020",
            "placeholder": "rgba(0, 0, 0, 0.38)",
            "primary": "#6200ee",
            "surface": "#ffffff",
            "text": "#000000",
          },
          "dark": false,
          "fonts": Object {
            "light": "HelveticaNeue-Light",
            "medium": "HelveticaNeue-Medium",
            "regular": "Helvetica Neue",
            "thin": "HelveticaNeue-Thin",
          },
          "roundness": 4,
        }
      }
    >
      Example Chip
    </Text>
  </View>
</View>
`;
